public class RandomizedCollection {
    private Dictionary<int, HashSet<int>> map;
    private List<int> lst;
    /** Initialize your data structure here. */
    public RandomizedCollection() {
        map = new Dictionary<int, HashSet<int>>();
        lst = new List<int>();
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public bool Insert(int val) {
        lst.Add(val);
        int lastIndex = lst.Count - 1;
        if(map.ContainsKey(val)) {
            map[val].Add(lastIndex);
        }
        else {
            map.Add(val, new  HashSet<int>(){lastIndex});
        }
        return map[val].Count == 1;
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public bool Remove(int val) {
        if(!map.ContainsKey(val) || map[val].Count == 0){
            return false;
        }
        int lastindex = lst.Count - 1;
        int listLastVal = lst[lastindex];
        HashSet<int> valIndexes = map[val];
        int index = valIndexes.First();
        
        valIndexes.Remove(index);
        
        lst[index] = listLastVal;
        map[listLastVal].Add(index);
        map[listLastVal].Remove(lastindex);
        
        lst.RemoveAt(lst.Count - 1);
        return true;
    }
    
    /** Get a random element from the collection. */
    public int GetRandom() {
        var rand = new Random();
        return lst[rand.Next(lst.Count)];
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * bool param_1 = obj.Insert(val);
 * bool param_2 = obj.Remove(val);
 * int param_3 = obj.GetRandom();
 */
